<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Calculadora Estatística - Tecnológica</title>
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #2ecc71;
            --bg-color-light: #ecf0f1;
            --text-color-light: #333;
            --bg-color-dark: #1e272e;
            --text-color-dark: #f5f5f5;
            --border-radius: 12px;
            --font-family: 'Arial', sans-serif;
            --transition-speed: 0.3s;
        }

        body {
            font-family: var(--font-family);
            background-color: var(--bg-color-light);
            color: var(--text-color-light);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            padding: 20px;
            transition: background-color var(--transition-speed), color var(--transition-speed);
        }

        body.dark {
            background-color: var(--bg-color-dark);
            color: var(--text-color-dark);
        }

        .container {
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: 0 5px 25px rgba(0, 0, 0, 0.15);
            width: 100%;
            max-width: 600px;
            padding: 25px;
            transition: background-color var(--transition-speed);
        }

        body.dark .container {
            background-color: #2f3640;
        }

        .header {
            text-align: center;
            margin-bottom: 20px;
        }

        .header h1 {
            font-size: 2rem;
            color: var(--primary-color);
        }

        .toggle-mode {
            position: absolute;
            top: 20px;
            right: 120px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            padding: 10px 15px;
            cursor: pointer;
            transition: background-color var(--transition-speed);
        }

        .toggle-mode:hover {
            background-color: var(--accent-color);
        }

        .link-button {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            padding: 10px 15px;
            cursor: pointer;
            transition: background-color var(--transition-speed);
        }

        .link-button:hover {
            background-color: var(--accent-color);
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        label {
            font-size: 1rem;
            font-weight: bold;
        }

        input[type="text"] {
            padding: 12px;
            border: 2px solid var(--primary-color);
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: border-color var(--transition-speed);
        }

        input[type="text"]:focus {
            border-color: var(--accent-color);
            outline: none;
        }

        button {
            padding: 15px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            font-size: 1.2rem;
            cursor: pointer;
            transition: background-color var(--transition-speed);
        }

        button:hover {
            background-color: var(--accent-color);
        }

        .results {
            margin-top: 25px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: var(--border-radius);
            border: 1px solid #ddd;
            display: none;
        }

        body.dark .results {
            background-color: #34495e;
        }

        #chart-container {
            margin-top: 30px;
            background-color: #fff;
            padding: 20px;
            border-radius: var(--border-radius);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: background-color var(--transition-speed);
        }

        body.dark #chart-container {
            background-color: #2d3436;
        }

        @media (max-width: 600px) {
            .container {
                padding: 15px;
            }

            .header h1 {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <main class="container">
        <button class="toggle-mode">Modo Escuro</button>
        <button class="link-button" onclick="window.open('https://docs.google.com/forms/d/14B2JinT9yfj03-fYjbdkUZwLRIxa1q6jCS2XXifZVEk/edit?ts=670b12a5#responses', '_blank');">Gráfico</button>
        <header class="header">
            <h1>Calculadora Estatística</h1>
        </header>

        <section class="content">
            <form id="calc-form">
                <label for="numbers">Insira os números (separados por vírgula):</label>
                <input type="text" id="numbers" placeholder="ex.: 10,11,12,14,7,9,52" required>
                <button type="button" id="calculate-button">Calcular</button>
            </form>

            <div class="results" id="results"></div>
            <div id="chart-container">
                <canvas id="myChart"></canvas>
            </div>
        </section>
    </main>

    <!-- Chart.js Biblioteca -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        let chart; // Variável para armazenar a instância do gráfico

        // Alternar entre modo claro e escuro
        document.querySelector('.toggle-mode').addEventListener('click', () => {
            document.body.classList.toggle('dark');
            const btn = document.querySelector('.toggle-mode');
            btn.textContent = document.body.classList.contains('dark') ? 'Modo Claro' : 'Modo Escuro';
        });

        // Funções de cálculo
        const calcular = (numbers) => {
            const soma = calcularSoma(numbers);
            const media = calcularMedia(numbers);
            const mediana = calcularMediana(numbers);
            const moda = calcularModa(numbers);
            return { soma, media, mediana, moda };
        };

        const calcularSoma = (numbers) => numbers.reduce((acc, curr) => acc + curr, 0);

        const calcularMedia = (numbers) => (calcularSoma(numbers) / numbers.length).toFixed(2);

        const calcularMediana = (numbers) => {
            const sorted = [...numbers].sort((a, b) => a - b);
            const meio = Math.floor(sorted.length / 2);
            return sorted.length % 2 === 0
                ? ((sorted[meio - 1] + sorted[meio]) / 2).toFixed(2)
                : sorted[meio].toFixed(2);
        };

        const calcularModa = (numbers) => {
            const freqMap = new Map();
            let maxFreq = 0;
            let modas = [];

            numbers.forEach(n => {
                const freq = (freqMap.get(n) || 0) + 1;
                freqMap.set(n, freq);
                if (freq > maxFreq) maxFreq = freq;
            });

            freqMap.forEach((freq, num) => {
                if (freq === maxFreq) modas.push(num);
            });

            return modas.length > 1 ? modas.join(', ') : modas[0];
        };

        // Função para gerar gráficos
        const gerarGraficos = (numbers) => {
            const ctx = document.getElementById('myChart').getContext('2d');
            const data = [
                calcularSoma(numbers),
                parseFloat(calcularMedia(numbers)),
                parseFloat(calcularMediana(numbers)),
                parseFloat(calcularModa(numbers))
            ];

            // Verifica se o gráfico já existe e o atualiza, caso contrário, cria um novo
            if (chart) {
                chart.data.datasets[0].data = data; // Atualiza os dados do gráfico
                chart.update(); // Atualiza o gráfico
            } else {
                chart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['Soma', 'Média', 'Mediana', 'Moda'],
                        datasets: [{
                            label: 'Valores Estatísticos',
                            data: data,
                            backgroundColor: ['#3498db', '#2ecc71', '#e74c3c', '#9b59b6']
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }
        };

        // Função para atualizar resultados e gráficos
        const atualizarResultados = () => {
            const input = document.getElementById('numbers').value;
            const numbers = input.split(',').map(Number).filter(n => !isNaN(n));

            if (numbers.length === 0) {
                alert('Por favor, insira um conjunto válido de números.');
                return;
            }

            const results = calcular(numbers);

            document.getElementById('results').innerHTML = `
                <p><strong>Soma:</strong> ${results.soma}</p>
                <p><strong>Média:</strong> ${results.media}</p>
                <p><strong>Mediana:</strong> ${results.mediana}</p>
                <p><strong>Moda:</strong> ${results.moda}</p>
            `;
            document.getElementById('results').style.display = 'block';

            // Gerar gráfico
            gerarGraficos(numbers);
        };

        // Adiciona evento ao botão "Calcular"
        document.getElementById('calculate-button').addEventListener('click', atualizarResultados);
    </script>
</body>
</html>











